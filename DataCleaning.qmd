---
title: "Women's Tennis Data"
format: html
editor: visual
---

```{r libraries}
library(rvest)
library(magrittr)
library(tidyverse)
library(readr)
library(ggplot2)
```
# Webscraping

## Australian Open Data

```{r Australian Open WTA,tidy=F }
#Step 0 - assign the weblink to an object
AOurl <- "https://ausopen.com/history/honour-roll/womens-singles"

#Step 1 - read the webpage into R
AOlink <- read_html(AOurl)

#Step 2 - identify the structure of the webpage, establish which piece you want to grab by the css code
AOhtml <- html_nodes(AOlink, css = "table")

#Step 3 - extract text from the node
AO_wta <- html_table(AOhtml)

#Combine all text for a paragraph form of the weather forecast
AO_wta <- as.data.frame(AO_wta)
class(AO_wta)
```
```{r cleaning}
# remove score column
AO_clean <- AO_wta |>
  select(-Score) |>
  rename(YEAR = Year, WINNER = Champion, `RUNNER-UP` = Runner.up) |>
  mutate(TOURNAMENT = "Australian Open") |>
  filter(YEAR >= 1950)

head(AO_clean)
```



## Wimbledon Data
```{r Wimbledon webscraping}
#Step 0 - assign the weblink to an object
Wurl <- "https://www.tennis-x.com/winners/womens/wimbledon.php"

#Step 1 - read the webpage into R
Wlink <- read_html(Wurl)

#Step 2 - identify the structure of the webpage, establish which piece you want to grab by the css code
Whtml <- html_nodes(Wlink, css = ".chart")

#Step 3 - extract text from the node
W_wta <- html_table(Whtml)
W_wta <- as.data.frame(W_wta)
class(W_wta)
```


```{r Wimbledon Cleaning}
# Remove first row that has column names
W_wta <- W_wta[-1,]
```

```{r}
# Change column names
W_clean <- W_wta |>
  rename(YEAR = X1, WINNER = X2, `RUNNER-UP` = X3, SCORE = X4) |>
  select(-SCORE) |>
  mutate(TOURNAMENT = "Wimbledon",
         YEAR = as.integer(YEAR)) |>
  filter(YEAR >= 1950)

head(W_clean)
```

## French Open Data

```{r French Open}
#Step 0 - assign the weblink to an object
FOurl <- "https://www.tennis-x.com/winners/womens/french-open.php"

#Step 1 - read the webpage into R
FOlink <- read_html(FOurl)

#Step 2 - identify the structure of the webpage, establish which piece you want to grab by the css code
FOhtml <- html_nodes(FOlink, css = ".chart")

#Step 3 - extract text from the node
FO_wta <- html_table(FOhtml)

#Combine all text for a paragraph form of the weather forecast

FO_wta <- as.data.frame(FO_wta)
class(FO_wta)
```

```{r French Open cleaning}
# remove first row with column names
FO_wta <- FO_wta[-1, ]
```

```{r}
# change column names
FO_clean <- FO_wta |>
  rename(YEAR = X1, WINNER = X2, `RUNNER-UP` = X3, SCORE = X4) |>
  select(-SCORE) |>
  mutate(TOURNAMENT = "French Open",
         YEAR = as.integer(YEAR)) |>
  filter(YEAR >= 1950)

head(FO_clean)
```

## U.S. Open Data

```{r US Open}
#Step 0 - assign the weblink to an object
USOurl <- "https://www.topendsports.com/events/tennis-grand-slam/us-open/winners-women.htm"

#Step 1 - read the webpage into R
USOlink <- read_html(USOurl)

#Step 2 - identify the structure of the webpage, establish which piece you want to grab by the css code
USOhtml <- html_nodes(USOlink, css = "table")

#Step 3 - extract text from the node
USO_wta <- html_table(USOhtml)

# Change from list to data.frame format
USO_wta <- as.data.frame(USO_wta)
class(USO_wta)
```

```{r cleaning}
USO_clean <- USO_wta |>
  select(-Score) |>
  rename(YEAR = Year, WINNER = Winner, `RUNNER-UP` = Runner.Up) |>
  mutate(TOURNAMENT = "U.S. Open") |>
  filter(YEAR >= 1950)

head(USO_clean)
```

# Joining WTA Data

```{r}
wta_clean <- rbind(AO_clean, W_clean)
wta_clean <- rbind(wta_clean, FO_clean)
wta_clean <- rbind(wta_clean, USO_clean)
head(wta_clean)
```

```{r cleaning wta}
# make separate nationality columns
wta <- wta_clean %>%
  separate(WINNER, into = c("WINNER", "WINNER_NATIONALITY"), sep = " \\(") |>
  mutate(WINNER_NATIONALITY = str_remove(WINNER_NATIONALITY, "\\)")) |>
  separate(`RUNNER-UP`, into = c("RUNNER-UP", "RUNNER-UP_NATIONALITY"), sep = " \\(") |>
  mutate(`RUNNER-UP_NATIONALITY` = str_remove(`RUNNER-UP_NATIONALITY`, "\\)"))

head(wta)
```


# Prize Money

## ATP
```{r}
atp <- read_csv(here("Data/Mens_Tennis_Grand_Slam_Winner.csv"))
head(atp)
```

```{r}
# convert prize money column in atp to USD for analysis (done)
# fill out most recent years prize money columns for wta (done)
# make prize money columns for wta (done)
# convert wta prize money to USD for analysis (done)
# use prize money data for wta and join to wta data set (done)
# add atp column to atp dataset (done)
# add wta column to wta dataset (done)
# join atp and wta dataset into one massive dataset for app (done)
# fill in missing values for wta via research (done)
# make a csv of new data (done)
# apply new dataset to app (done)
# forecast prize money for mens and womens grandslams for next two years using ECON 406 knowledge
# add information and content to app for user convenience
# add more buttons "select for image" or "select for analytics"
```

```{r}
# convert FO 1968-2001 from franks to USD
# convert FO 2002-2022 from Euro to USD
usd_conversion <- atp |>
  pivot_wider(names_from = TOURNAMENT,
              values_from = WINNER_PRIZE) |>
  mutate(Wimbledon = Wimbledon*1.26,
         `Australian Open` = `Australian Open`*0.67,
         `French Open` = ifelse(YEAR <= 2001, `French Open`*0.164, `French Open`*1.08))

head(usd_conversion)
```

```{r add mean prize money column}
# pivot longer again and create a column for mean prize money by year
atp_usd <- usd_conversion|>
  select(-`Australian Open (Dec)`, -`Australian Open (Jan)`) |>
  pivot_longer(`Australian Open`:`French Open`,
               names_to = "TOURNAMENT",
               values_to = "WINNER_PRIZE",
               values_drop_na = TRUE) |>
  group_by(YEAR) |>
  mutate(MEAN_PRIZE = mean(WINNER_PRIZE),
         GENDER = "Male",
         WINNER_PRIZE = as.integer(WINNER_PRIZE),
         YEAR = as.integer(YEAR),
         MEAN_PRIZE = as.integer(MEAN_PRIZE)) |>
  select(-c(WINNER_ATP_RANKING, `RUNNER-UP_ATP_RANKING`, WINNER_LEFT_OR_RIGHT_HANDED))
head(atp_usd)
```


```{r prize money data}
prize <- read_csv(here("Data/tennis_pay.csv"))
class(prize)
prize <- as.data.frame(prize)
# convert everything to USD
## us: 1 USD = 1 USD
## french: 1EUR = 1.08 USD
## australian: 1 AUD = 0.67 USD
## wimbledon: 1 GBP = 1.26 USD
head(prize)
```
## WTA

```{r}
# clean existing data
wta_prize <- prize |>
  select(year, wimbledon_women, us_open_women, aus_open_women, roland_garros_women) |>
  rename(Wimbledon = wimbledon_women,
         `U.S. Open` = us_open_women,
         `French Open` = roland_garros_women,
         `Australian Open` = aus_open_women)

head(wta_prize)
```

```{r}
# add recent years prize money data
# found via googling
recent_years <- data.frame(
 year <- c(2023, 2022, 2021, 2020, 2019, 2018, 2017, 2016),
 `Australian Open` <- c(2975000, 2875000, 2750000, 2065000, 4100000, 4000000, 3700000, 3400000),
 `French Open` <- c(NA, 2000000, 1400000, 1600000, 2300000, 2200000, 2100000, 2000000),
 Wimbledon <- c(NA, 2000000, 1700000, 0, 2350000, 2250000, 2200000, 2000000),
 `U.S. Open` <- c(NA, 2600000, 2500000, 3000000, 3850000, 3800000, 3700000, 3500000)
 )

# clean columnn names
recent_years <- recent_years |>
  rename(`Australian Open` = X.Australian.Open.....c.2975000..2875000..2750000..2065000..4100000..,
         `French Open` = X.French.Open.....c.NA..2e.06..1400000..1600000..2300000..2200000..,
         Wimbledon = Wimbledon....c.NA..2e.06..1700000..0..2350000..2250000..2200000..,
         `U.S. Open` = X.U.S..Open.....c.NA..2600000..2500000..3e.06..3850000..3800000..,
         year = year....c.2023..2022..2021..2020..2019..2018..2017..2016.)

head(recent_years)
```

```{r}
# join wta_prize data and recent_years data
wta_prize_filled <- recent_years |>
  full_join(wta_prize) |>
  rename(YEAR = year) |>
  pivot_longer(`Australian Open`:`U.S. Open`,
               names_to = "TOURNAMENT",
               values_to = "WINNER_PRIZE",
               values_drop_na = TRUE) |>
  mutate(YEAR = as.integer(YEAR),
         WINNER_PRIZE = as.integer(WINNER_PRIZE))

head(wta_prize_filled)
```
```{r}
# join wta_prize_filled and wta data
# convert wta prize money to USD for analysis
wta_full <- wta |>
  left_join(wta_prize_filled) |>
  pivot_wider(names_from = TOURNAMENT,
              values_from = WINNER_PRIZE) |>
   mutate(Wimbledon = Wimbledon*1.26,
         `French Open` = ifelse(YEAR <= 2001, `French Open`*0.164, `French Open`*1.08),
         `Australian Open` = `Australian Open`*0.67)

head(wta_full)
```

```{r}
# revert to original 
wta_usd <- wta_full |>
  pivot_longer(`Australian Open`:`U.S. Open`,
               names_to = "TOURNAMENT",
               values_to = "WINNER_PRIZE",
               values_drop_na = TRUE) |>
  group_by(YEAR) |>
  mutate(MEAN_PRIZE = mean(WINNER_PRIZE),
         GENDER = "Female",
         WINNER_PRIZE = as.integer(WINNER_PRIZE),
         MEAN_PRIZE = as.integer(MEAN_PRIZE)) |>
  select(-`RUNNER-UP_NATIONALITY`)

head(wta_usd)
```
```{r}
# join atp and wta into one massive dataset for app
df <- rbind(atp_usd, wta_usd)

head(df)
```


```{r csv}
# turn cleaned data into a csv
write_csv(df, "grandslam_prize_usd.csv")
```



```{r}
# women <- grandslam %>%
#   select(-c(WINNER.x, `RUNNER-UP.x`, WINNER_NATIONALITY.x, WINNER_PRIZE.x, MEAN_PRIZE.x)) %>% 
#   rename_with(~ str_replace(., "\\.y$", ""), ends_with(".y")) %>% 
#   mutate(GENDER = "Women's Singles") %>% 
#   distinct(.keep_all = FALSE)
  
```

```{r}
# men <- grandslam %>%
#   select(-c(WINNER.y, `RUNNER-UP.y`, WINNER_NATIONALITY.y, WINNER_PRIZE.y, MEAN_PRIZE.y)) %>% 
#   rename_with(~ str_replace(., "\\.x$", ""), ends_with(".x")) %>% 
#   mutate(GENDER = "Men's Singles")
```


```{r}
# fo <- grandslam |>
#   filter(TOURNAMENT == "French Open")

```


